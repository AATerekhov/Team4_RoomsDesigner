// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RoomsDesigner.DataAccess;

#nullable disable

namespace RoomsDesigner.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241111155604_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Administration.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("RoleId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Administration.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Diary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Diaries");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Habit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("HabitId");

                    b.Property<int>("HabitCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("HabitCategoryId");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.HabitCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("HabitCategoryId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("HabitCategories");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.IntermediateEntities.RoomHabit", b =>
                {
                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("HabitId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SuggestedByUserId")
                        .HasColumnType("uuid");

                    b.HasKey("RoomId", "HabitId");

                    b.HasIndex("HabitId");

                    b.ToTable("RoomHabits");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.IntermediateEntities.UserRoom", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DiaryId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoomId");

                    b.HasIndex("DiaryId");

                    b.HasIndex("RoomId");

                    b.ToTable("UserRooms");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Reward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("RoomId");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Habit", b =>
                {
                    b.HasOne("RoomsDesigner.Core.Domain.Entities.HabitCategory", "HabitCategory")
                        .WithMany("Habits")
                        .HasForeignKey("HabitCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HabitCategory");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.IntermediateEntities.RoomHabit", b =>
                {
                    b.HasOne("RoomsDesigner.Core.Domain.Entities.Habit", "Habit")
                        .WithMany("RoomHabits")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomsDesigner.Core.Domain.Entities.Room", "Room")
                        .WithMany("RoomHabits")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.IntermediateEntities.UserRoom", b =>
                {
                    b.HasOne("RoomsDesigner.Core.Domain.Entities.Diary", "Diary")
                        .WithMany()
                        .HasForeignKey("DiaryId");

                    b.HasOne("RoomsDesigner.Core.Domain.Entities.Room", "Room")
                        .WithMany("UserRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomsDesigner.Core.Domain.Entities.Administration.User", "User")
                        .WithMany("UserRooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diary");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("RoomsDesigner.Core.Domain.Entities.Administration.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomsDesigner.Core.Domain.Entities.Administration.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Administration.User", b =>
                {
                    b.Navigation("UserRooms");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Habit", b =>
                {
                    b.Navigation("RoomHabits");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.HabitCategory", b =>
                {
                    b.Navigation("Habits");
                });

            modelBuilder.Entity("RoomsDesigner.Core.Domain.Entities.Room", b =>
                {
                    b.Navigation("RoomHabits");

                    b.Navigation("UserRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
